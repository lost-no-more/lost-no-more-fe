name: CI for Develop

on:
  pull_request:
    branches:
      - develop # develop 브랜치에 PR을 보낼 때마다 실행

jobs:
  build:
    runs-on: ubuntu-latest # Ubuntu 환경에서 실행

    steps:
      - name: Check out code
        uses: actions/checkout@v3 # 소스 코드를 체크아웃합니다.

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Node.js 버전 설정

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store # pnpm 캐시 디렉토리
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }} # 캐시 키
          restore-keys: |
            ${{ runner.os }}-pnpm-  # 캐시 복원 시 더 일반적인 키 사용

      - name: Install dependencies
        run: |
          pnpm install  # 의존성 설치 (pnpm 사용)

      - name: Check for latest updates
        run: |
          git fetch origin develop  # 최신 develop 브랜치를 받아옵니다.
          git diff --exit-code origin/develop  # 최신화 여부 체크
        continue-on-error: true # 최신화 체크 실패 시에도 파이프라인을 계속 실행

      - name: Type check
        run: |
          pnpm type-check  # TypeScript 타입 체크

      - name: Run tests
        run: |
          pnpm test  # 유닛 테스트 실행

      - name: Build project
        run: |
          pnpm build  # 프로젝트 빌드 실행

      - name: Deploy to Vercel (Develop)
        if: github.ref == 'refs/pull/*/merge' # PR이 merge될 때만 실행
        run: |
          curl -fsSL https://vercel.com/download -o vercel.tar.gz  # Vercel CLI 다운로드
          tar -xzvf vercel.tar.gz
          ./vercel login ${{ secrets.VERCEL_TOKEN }}  # Vercel 로그인 (토큰은 GitHub Secrets에 설정)
          ./vercel --env NODE_ENV=development --prod  # develop 환경에 배포
