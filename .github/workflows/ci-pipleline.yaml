name: CI Pipeline
run-name: CI:${{ github.ref_name }} by @${{ github.actor }}

on:
  pull_request:
    branches:
      - main
      - develop
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

permissions:
  pull-requests: write
  contents: read

jobs:
  setup-ci:
    name: Setup CI
    outputs:
      file_changes: ${{ steps.export-changes.outputs.changed }}
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if Branch is Up-to-Date
        run: |
          if ! git merge-base --is-ancestor origin/${{ github.base_ref }} origin/${{ github.head_ref }};
          then echo "Branch is not up-to-date with the target branch";
          exit 1; fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.12.0'

      - name: Install pnpm
        run: npm install -g pnpm@9.15.0

      - name: Cache Dependencies
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm-store
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - if: ${{ steps.pnpm-cache.outputs.cache-hit != 'true' }}
        run: pnpm install

      - name: Export Changed Files
        id: export-changes
        run: |
          changes=$(git diff --name-only --diff-filter=duxb origin/${{ github.base_ref }} origin/${{ github.head_ref }} | grep -E "\.((j|t)sx?)$" | xargs)
          echo "changed=$changes" >> "$GITHUB_OUTPUT"

      - name: Display Changed Files
        run: echo ${{ steps.export-changes.outputs.changed }}

  lint:
    name: Run ESLint
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: setup-ci
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '22.12.0'
      - run: npm install -g pnpm@9.15.0
      - run: pnpm install
      - run: pnpm run lint:ci
        env:
          CI: true
          FILES: ${{ needs.setup-ci.outputs.changed }}

  type-check:
    name: TypeScript Type Check
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: setup-ci
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '22.12.0'
      - run: npm install -g pnpm@9.15.0
      - run: pnpm install
      - name: Generate tsconfig for CI
        run: |
          echo '{
            "extends": "./tsconfig.json",
            "include": ["src/**/*", ".next/types/**/*.ts", "next-env.d.ts"],
            "exclude": ["node_modules", "packages/miricanvas-libs"]
          }' > tsconfig.ci.json
      - run: pnpm run check-ts:ci || pnpm run check-ts

  unit-test:
    name: Run Unit Tests
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: setup-ci
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'
      - run: npm install -g pnpm@9.15.0
      - run: pnpm install
      - run: pnpm run test:ci
        env:
          CI: true
          FILES: ${{ needs.setup-ci.outputs.changed }}
